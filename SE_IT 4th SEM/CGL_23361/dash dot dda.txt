#include <GL/glut.h>
#include <iostream>
#include <bits/stdc++.h>

using namespace std;

void putPixel(int x, int y) {
    glBegin(GL_POINTS);
    glVertex2i(x, y);
    glEnd();
    glFlush();
}

void ddaLine(int x1, int y1, int x2, int y2) {
    float dx, dy, steps, xIncrement, yIncrement;
    dx = x2 - x1;
    dy = y2 - y1;

    // Determine the number of steps required
    if (abs(dx) > abs(dy))
        steps = abs(dx);
    else
        steps = abs(dy);

    // Calculate the increment values for x and y
    xIncrement = dx / steps;
    yIncrement = dy / steps;

    float x = x1, y = y1;
    int val = 0;

    // Plot the points along the line
    for (int i = 0; i <= steps; i++) {
        if (val < 10 || (val > 14 && val < 17))
            putPixel(round(x), round(y));
        val++;
        if (val == 20) val = 0;
        x += xIncrement;
        y += yIncrement;
    }
}

void display() {
    glColor3f(1, 0, 0);
    ddaLine(100, 100, 300, 290);
    ddaLine(0, 0, 10, 200);
}

void init() {
    glClearColor(1.0, 1.0, 1.0, 0);
    glClear(GL_COLOR_BUFFER_BIT);
    gluOrtho2D(-300, 300, -300, 300);
}

int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE);
    glutInitWindowPosition(0, 0);
    glutInitWindowSize(600, 600);
    glutCreateWindow("Problem 3 - line patterns");

    init();
    glutDisplayFunc(display);
    glutMainLoop();

    return 0;
}
